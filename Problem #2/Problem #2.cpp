#include<iostream>
using namespace std;
/*
	----------------------------------
	https://projecteuler.net/problem=2
	----------------------------------
	--------------------------------------------------------------------
	Problem #1.
	Statement:
	Each new term in the Fibonacci sequence is generated by adding the 
	previous two terms. By starting with 1 and 2, the first 10 terms 
	will be:
		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
		
	By considering the terms in the Fibonacci sequence whose values do 
	not exceed four million, find the sum of the even-valued terms.
	--------------------------------------------------------------------
	Solution:
*/
int SumOfEvenFibonacciSequence(int upperLimit) {
	if (upperLimit == 1)	return 0;
	if (upperLimit == 2)	return 2;
	int a = 1, b = 2, c = 0, sum = 2;
	while (c = a + b <= upperLimit) {
		c = a + b;
		a = b;
		b = c;
		sum += c % 2 == 0 ? c : 0;
	}
	return(sum);
}

int main() {
	int upperLimit = 4000000;
	cout << SumOfEvenFibonacciSequence(upperLimit) << endl;
	return 0;
}
